// controllers/notificationController.js
const db = require('../db');
const { v4: uuidv4 } = require('uuid');

// üîê Middleware y√™u c·∫ßu ƒëƒÉng nh·∫≠p
exports.requireLogin = (req, res, next) => {
  if (!req.session || !req.session.user) {
    return res.status(401).json({ message: 'B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p!' });
  }
  next();
};

/**
 * L·∫•y danh s√°ch th√¥ng b√°o c·ªßa ng∆∞·ªùi d√πng hi·ªán t·∫°i
 */
exports.getNotificationsByUser = async (req, res) => {
  const userId = req.session.user.id;
  const { type } = req.query;

  try {
    let query = `
  SELECT n.*, u.nickname AS senderName
  FROM notifications n 
  LEFT JOIN users u ON n.senderId = u.id 
  WHERE n.userId = ?
`;
    const params = [userId];

    if (type === 'report' || type === 'comment') {
      query += ' AND n.type = ?';
      params.push(type);
    }

    query += ' ORDER BY n.createdAt DESC';

    const [rows] = await db.query(query, params);
    res.json(rows);
  } catch (err) {
    console.error('‚ùå L·ªói l·∫•y th√¥ng b√°o:', err);
    res.status(500).json({ message: 'L·ªói server khi l·∫•y th√¥ng b√°o' });
  }
};

/**
 * T·∫°o th√¥ng b√°o th·ªß c√¥ng (c√≥ x·ª≠ l√Ω t·ª± ƒë·ªông content n·∫øu kh√¥ng c√≥)
 */
exports.createNotification = async ({ userId, senderId, type, content, link }) => {
  const id = uuidv4();

  // T·ª± sinh n·ªôi dung n·∫øu thi·∫øu
  if (!content && senderId) {
    const [[user]] = await db.query('SELECT nickname FROM users WHERE id = ?', [senderId]);
    const nickname = user?.nickname || 'Ai ƒë√≥';
    if (type === 'comment') {
      content = `${nickname} ƒë√£ b√¨nh lu·∫≠n v√†o b√†i vi·∫øt c·ªßa b·∫°n.`;
    } else if (type === 'like') {
      content = `${nickname} ƒë√£ th√≠ch b√¨nh lu·∫≠n c·ªßa b·∫°n.`;
    } else {
      content = `${nickname} ƒë√£ g·ª≠i m·ªôt th√¥ng b√°o ƒë·∫øn b·∫°n.`;
    }
  }

  if (!content) {
    content = 'B·∫°n c√≥ th√¥ng b√°o m·ªõi.';
  }

  await db.query(
    'INSERT INTO notifications (id, userId, senderId, type, content, link) VALUES (?, ?, ?, ?, ?, ?)',
    [id, userId, senderId || null, type, content, link || null]
  );
};

/**
 * ‚úîÔ∏è ƒê√°nh d·∫•u ƒë√£ ƒë·ªçc
 */
exports.markAsRead = async (req, res) => {
  const { id } = req.params;
  try {
    const [result] = await db.query(
      'UPDATE notifications SET isRead = 1 WHERE id = ?',
      [id]
    );
    if (result.affectedRows === 0) {
      return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y th√¥ng b√°o!' });
    }
    res.json({ message: 'ƒê√£ ƒë√°nh d·∫•u ƒë√£ ƒë·ªçc.' });
  } catch (err) {
    console.error('‚ùå L·ªói c·∫≠p nh·∫≠t tr·∫°ng th√°i:', err);
    res.status(500).json({ message: 'L·ªói server!' });
  }
};

/**
 * üîÅ H√†m ti·ªán √≠ch g·ªçi ·ªü controller kh√°c (comment, like, report,...)
 * ‚ö†Ô∏è ƒê·∫£m b·∫£o ph·∫£i truy·ªÅn `senderId`, n·∫øu kh√¥ng s·∫Ω b·ªã null
 */
exports.createNotificationHelper = async ({ userId, senderId, type, content, link }) => {
  const id = uuidv4();

  // N·∫øu thi·∫øu n·ªôi dung, t·ª± ƒë·ªông sinh theo senderId
  if (!content && senderId) {
    const [[user]] = await db.query('SELECT nickname FROM users WHERE id = ?', [senderId]);
    const nickname = user?.nickname || 'Ai ƒë√≥';
    if (type === 'comment') {
      content = `${nickname} ƒë√£ b√¨nh lu·∫≠n v√†o b√†i vi·∫øt c·ªßa b·∫°n.`;
    } else if (type === 'like') {
      content = `${nickname} ƒë√£ th√≠ch b√¨nh lu·∫≠n c·ªßa b·∫°n.`;
    } else {
      content = `${nickname} ƒë√£ g·ª≠i m·ªôt th√¥ng b√°o ƒë·∫øn b·∫°n.`;
    }
  }

  if (!content) {
    content = 'B·∫°n c√≥ th√¥ng b√°o m·ªõi.';
  }

  await db.query(
    'INSERT INTO notifications (id, userId, senderId, type, content, link) VALUES (?, ?, ?, ?, ?, ?)',
    [id, userId, senderId || null, type, content, link || null]
  );
};
/**
 * ‚ùå X√≥a m·ªôt th√¥ng b√°o theo ID
 */
exports.deleteNotificationById = async (req, res) => {
  const { id } = req.params;

  try {
    const [result] = await db.query('DELETE FROM notifications WHERE id = ?', [id]);

    if (result.affectedRows === 0) {
      return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y th√¥ng b√°o!' });
    }

    res.json({ message: 'ƒê√£ x√≥a th√¥ng b√°o.' });
  } catch (err) {
    console.error('‚ùå L·ªói x√≥a th√¥ng b√°o:', err);
    res.status(500).json({ message: 'L·ªói server khi x√≥a th√¥ng b√°o.' });
  }
};

/**
 * ‚ùå X√≥a t·∫•t c·∫£ th√¥ng b√°o theo lo·∫°i
 */
exports.deleteAllNotificationsByType = async (req, res) => {
  const userId = req.session.user.id;
  const { type } = req.query;

  try {
    let query = 'DELETE FROM notifications WHERE userId = ?';
    const params = [userId];

    // Ch·ªâ l·ªçc n·∫øu type l√† h·ª£p l·ªá
    if (type === 'report' || type === 'comment' || type === 'like') {
      query += ' AND type = ?';
      params.push(type);
    }

    await db.query(query, params);

    res.json({ message: 'ƒê√£ x√≥a t·∫•t c·∫£ th√¥ng b√°o.' });
  } catch (err) {
    console.error('‚ùå L·ªói x√≥a t·∫•t c·∫£ th√¥ng b√°o:', err);
    res.status(500).json({ message: 'L·ªói server khi x√≥a t·∫•t c·∫£.' });
  }
};
